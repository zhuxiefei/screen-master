<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.betel.estatemgmt.common.mapper.patrol.EquipmentTypeMapper">
    <resultMap id="BaseResultMap" type="com.betel.estatemgmt.common.model.patrol.EquipmentType">
        <id column="typeId" property="typeId" jdbcType="VARCHAR"/>
        <result column="typeName" property="typeName" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="estateId" property="estateId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    typeId, typeName, createTime,estateId
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from equipment_type
        where typeId = #{typeId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from equipment_type
    where typeId = #{typeId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.betel.estatemgmt.common.model.patrol.EquipmentType">
    insert into equipment_type (typeId, typeName, createTime,estateId
      )
    values (#{typeId,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},#{estateId,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.betel.estatemgmt.common.model.patrol.EquipmentType">
        insert into equipment_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeId != null">
                typeId,
            </if>
            <if test="typeName != null">
                typeName,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="estateId != null">
                estateId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeId != null">
                #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="typeName != null">
                #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="estateId != null">
                #{estateId,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.betel.estatemgmt.common.model.patrol.EquipmentType">
        update equipment_type
        <set>
            <if test="typeName != null">
                typeName = #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="estateId != null">
                estateId = #{estateId,jdbcType=VARCHAR},
            </if>
        </set>
        where typeId = #{typeId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.betel.estatemgmt.common.model.patrol.EquipmentType">
    update equipment_type
    set typeName = #{typeName,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},estateId = #{estateId,jdbcType=VARCHAR}
    where typeId = #{typeId,jdbcType=VARCHAR}
  </update>
    <select id="findAllTypeList" resultType="com.betel.estatemgmt.common.model.patrol.EquipmentType"
            parameterType="com.betel.estatemgmt.business.web.patrol.model.PatrolReq">
        SELECT * FROM equipment_type et WHERE 1=1
        <if test="startTime != null and startTime !=''">
            AND et.createTime &gt;=#{startTime,jdbcType=VARCHAR}
        </if>
        <if test="endTime != null and endTime !=''">
            AND et.createTime &lt;=#{endTime,jdbcType=VARCHAR}
        </if>
        AND et.estateId = #{estateId}
        ORDER BY et.createTime DESC
    </select>
    <delete id="deleteType" parameterType="java.lang.String">
        DELETE FROM equipment_type WHERE typeId IN
        <foreach collection="array" item="typeId" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </delete>
    <select id="findTypeList" resultType="com.betel.estatemgmt.common.model.patrol.EquipmentType"
            parameterType="com.betel.estatemgmt.business.web.patrol.model.PatrolReq">
        SELECT * FROM equipment_type et WHERE 1=1 AND estateId=#{estateId}
        <if test="equipmentType != null and equipmentType !=''">
            AND et.typeName = #{equipmentType}
        </if>
    </select>

    <select id="findTypes" resultType="com.betel.estatemgmt.common.model.patrol.EquipmentType"
            parameterType="java.lang.String">
        SELECT * FROM equipment_type WHERE estateId=#{estateId}
    </select>
    <select id="findEquiptByType" resultType="com.betel.estatemgmt.common.model.patrol.PatrolEquipment">
        SELECT * FROM patrol_equipment WHERE equipmentType IN
        <foreach collection="array" index="index" item="typeId" open="(" close=")" separator=",">
            #{typeId}
        </foreach>
    </select>
</mapper>