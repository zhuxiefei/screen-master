<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.betel.estatemgmt.common.mapper.work.TaskRecordPicMapper" >
  <resultMap id="BaseResultMap" type="com.betel.estatemgmt.common.model.work.TaskRecordPic" >
    <id column="recordId" property="recordId" jdbcType="VARCHAR" />
    <id column="pictureId" property="pictureId" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    recordId, pictureId, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.betel.estatemgmt.common.model.work.TaskRecordPicKey" >
    select 
    <include refid="Base_Column_List" />
    from work_task_record_picture
    where recordId = #{recordId,jdbcType=VARCHAR}
      and pictureId = #{pictureId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.betel.estatemgmt.common.model.work.TaskRecordPicKey" >
    delete from work_task_record_picture
    where recordId = #{recordId,jdbcType=VARCHAR}
      and pictureId = #{pictureId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.betel.estatemgmt.common.model.work.TaskRecordPic" >
    insert into work_task_record_picture (recordId, pictureId, createTime, 
      updateTime)
    values (#{recordId,jdbcType=VARCHAR}, #{pictureId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.betel.estatemgmt.common.model.work.TaskRecordPic" >
    insert into work_task_record_picture
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        recordId,
      </if>
      <if test="pictureId != null" >
        pictureId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="pictureId != null" >
        #{pictureId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.betel.estatemgmt.common.model.work.TaskRecordPic" >
    update work_task_record_picture
    <set >
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where recordId = #{recordId,jdbcType=VARCHAR}
      and pictureId = #{pictureId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.betel.estatemgmt.common.model.work.TaskRecordPic" >
    update work_task_record_picture
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where recordId = #{recordId,jdbcType=VARCHAR}
      and pictureId = #{pictureId,jdbcType=VARCHAR}
  </update>

  <select id="findPicUrlByRecordId" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT
    sp.pictureUrl
    FROM work_task_record_picture wtrp
    LEFT JOIN system_picture sp ON sp.pictureId = wtrp.pictureId
    WHERE wtrp.recordId = #{recordId}
  </select>

  <select id="findPicIdByRecordId" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT
    pictureId
    FROM work_task_record_picture
    WHERE recordId = #{recordId}
  </select>

  <delete id="deleteByRecordId" parameterType="java.lang.String">
    DELETE FROM work_task_record_picture WHERE recordId = #{recordId}
  </delete>

  <insert id="insertList">
    insert into work_task_record_picture (recordId, pictureId, createTime, updateTime)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.recordId}, #{item.pictureId}, #{item.createTime}, #{item.updateTime})
    </foreach>
  </insert>
</mapper>