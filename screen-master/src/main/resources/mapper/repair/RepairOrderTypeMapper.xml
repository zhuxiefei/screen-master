<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.betel.estatemgmt.common.mapper.repair.RepairOrderTypeMapper" >
  <resultMap id="BaseResultMap" type="com.betel.estatemgmt.common.model.repair.RepairOrderType" >
    <id column="typeId" property="typeId" jdbcType="BIGINT" />
    <result column="parentId" property="parentId" jdbcType="BIGINT" />
    <result column="typeType" property="typeType" jdbcType="BIT" />
    <result column="typeName" property="typeName" jdbcType="VARCHAR" />
    <result column="typeDesc" property="typeDesc" jdbcType="VARCHAR" />
    <result column="estateType" property="estateType" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    typeId, parentId, typeType, typeName, typeDesc, estateType
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from repair_order_type
    where typeId = #{typeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from repair_order_type
    where typeId = #{typeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.betel.estatemgmt.common.model.repair.RepairOrderType" >
    insert into repair_order_type (typeId, parentId, typeType, 
      typeName, typeDesc,estateType)
    values (#{typeId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{typeType,jdbcType=BIT}, 
      #{typeName,jdbcType=VARCHAR}, #{typeDesc,jdbcType=VARCHAR}, #{estateType,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.betel.estatemgmt.common.model.repair.RepairOrderType" >
    insert into repair_order_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        typeId,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="typeType != null" >
        typeType,
      </if>
      <if test="typeName != null" >
        typeName,
      </if>
      <if test="typeDesc != null" >
        typeDesc,
      </if>
      <if test="estateType != null" >
        estateType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="typeType != null" >
        #{typeType,jdbcType=BIT},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDesc != null" >
        #{typeDesc,jdbcType=VARCHAR},
      </if>
      <if test="estateType != null" >
        #{estateType,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.betel.estatemgmt.common.model.repair.RepairOrderType" >
    update repair_order_type
    <set >
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="typeType != null" >
        typeType = #{typeType,jdbcType=BIT},
      </if>
      <if test="typeName != null" >
        typeName = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDesc != null" >
        typeDesc = #{typeDesc,jdbcType=VARCHAR},
      </if>
      <if test="estateType != null" >
        estateType = #{estateType,jdbcType=BIT},
      </if>
    </set>
    where typeId = #{typeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.betel.estatemgmt.common.model.repair.RepairOrderType" >
    update repair_order_type
    set parentId = #{parentId,jdbcType=BIGINT},
      typeType = #{typeType,jdbcType=BIT},
      typeName = #{typeName,jdbcType=VARCHAR},
      typeDesc = #{typeDesc,jdbcType=VARCHAR},
      estateType = #{estateType,jdbcType=BIT}
    where typeId = #{typeId,jdbcType=BIGINT}
  </update>
  <!--zy 查询全部维修单-->
  <select id="findAllRepairOrderType" resultType="com.betel.estatemgmt.common.model.repair.RepairOrderType">
    select
    <include refid="Base_Column_List" />
    from repair_order_type
    WHERE typeType = #{typeType} AND estateType = #{estateType}
  </select>

  <select id="selectByArea" parameterType="java.lang.Integer" resultType="com.betel.estatemgmt.business.web.repair.model.TypeInfo">
    SELECT
    typeId,
    typeName
    FROM repair_order_type
    WHERE
    1=1
    <if test="area == 1">
      AND parentId IS NOT NULL AND typeType = #{area}
    </if>
    <if test="area == 2">
      AND parentId IS NULL AND typeType = #{area}
    </if>
    AND estateType = #{estateType}
  </select>
</mapper>