<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.betel.estatemgmt.common.mapper.security.SecuritySigninAddressMapper">
    <resultMap id="BaseResultMap" type="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
        <id column="signinId" property="signinId" jdbcType="VARCHAR"/>
        <result column="signinAddress" property="signinAddress" jdbcType="VARCHAR"/>
        <result column="signinDesc" property="signinDesc" jdbcType="VARCHAR"/>
        <result column="areaId" property="areaId" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    signinId, signinAddress, signinDesc, areaId, createTime, updateTime
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from security_signin_address
        where signinId = #{signinId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from security_signin_address
    where signinId = #{signinId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
    insert into security_signin_address (signinId, signinAddress, signinDesc, 
      areaId, createTime, updateTime
      )
    values (#{signinId,jdbcType=VARCHAR}, #{signinAddress,jdbcType=VARCHAR}, #{signinDesc,jdbcType=VARCHAR}, 
      #{areaId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
        insert into security_signin_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="signinId != null">
                signinId,
            </if>
            <if test="signinAddress != null">
                signinAddress,
            </if>
            <if test="signinDesc != null">
                signinDesc,
            </if>
            <if test="areaId != null">
                areaId,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="signinId != null">
                #{signinId,jdbcType=VARCHAR},
            </if>
            <if test="signinAddress != null">
                #{signinAddress,jdbcType=VARCHAR},
            </if>
            <if test="signinDesc != null">
                #{signinDesc,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
        update security_signin_address
        <set>
            <if test="signinAddress != null">
                signinAddress = #{signinAddress,jdbcType=VARCHAR},
            </if>
            <if test="signinDesc != null">
                signinDesc = #{signinDesc,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                areaId = #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where signinId = #{signinId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
    update security_signin_address
    set signinAddress = #{signinAddress,jdbcType=VARCHAR},
      signinDesc = #{signinDesc,jdbcType=VARCHAR},
      areaId = #{areaId,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where signinId = #{signinId,jdbcType=VARCHAR}
  </update>
    <select id="findSignList" parameterType="com.betel.estatemgmt.business.web.security.model.SecurityReq"
            resultType="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
    SELECT signinId, signinAddress,DATE_FORMAT(createTime,'%Y-%m-%d %T') AS createTime,areaId FROM security_signin_address WHERE areaId = #{areaId} ORDER by createTime DESC
  </select>
    <select id="findSignByName" parameterType="com.betel.estatemgmt.business.web.security.model.SecurityReq"
            resultType="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
        SELECT signinId, signinAddress FROM security_signin_address WHERE
        signinAddress = #{signinAddress} AND areaId = #{areaId}
        <if test="signinId != null and signinId != ''">
            AND signinId != #{signinId}
        </if>
    </select>
    <select id="findSignByaAreaId" parameterType="com.betel.estatemgmt.business.web.security.model.SecurityReq"
            resultType="com.betel.estatemgmt.common.model.security.SecuritySigninAddress">
        SELECT * FROM security_signin_address WHERE areaId = #{areaId}
    </select>


    <select id="findAddressByRecordId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        *
        from security_signin_address ssa
        LEFT JOIN security_content_signin scs on ssa.signinId = scs.signinId
        LEFT JOIN security_record sr on scs.contentId = sr.contentId
        where sr.recordId = #{recordId,jdbcType=VARCHAR}
    </select>
</mapper>